const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';

async function testMigration() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –Ω–∞ Supabase...\n');

  try {
    // –¢–µ—Å—Ç 1: Health check
    console.log('1. –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint...');
    const healthResponse = await axios.get(`${API_BASE_URL}/health`);
    console.log('‚úÖ Health check:', healthResponse.data);

    // –¢–µ—Å—Ç 2: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase
    console.log('\n2. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Supabase...');
    const userData = {
      userId: 'migration-test-user',
      userData: {
        name: '–¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏',
        email: 'migration@test.com',
        guests: [
          { id: '1', name: '–ì–æ—Å—Ç—å –º–∏–≥—Ä–∞—Ü–∏–∏', email: 'guest@test.com', status: 'confirmed' }
        ],
        wishlist: [
          { id: '1', name: '–ü–æ–¥–∞—Ä–æ–∫ –º–∏–≥—Ä–∞—Ü–∏–∏', description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫' }
        ],
        location: {
          name: '–ú–µ—Å—Ç–æ –º–∏–≥—Ä–∞—Ü–∏–∏',
          address: '–ê–¥—Ä–µ—Å –º–∏–≥—Ä–∞—Ü–∏–∏',
          date: '2024-12-31',
          time: '20:00'
        },
        photos: []
      }
    };

    const saveUserResponse = await axios.post(`${API_BASE_URL}/users`, userData);
    console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ Supabase:', saveUserResponse.data);

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
    console.log('\n3. –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase...');
    const getUserResponse = await axios.get(`${API_BASE_URL}/users?userId=migration-test-user`);
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Supabase:', getUserResponse.data);

    // –¢–µ—Å—Ç 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ Supabase
    console.log('\n4. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –≤ Supabase...');
    const eventData = {
      eventId: 'migration-test-event',
      eventData: {
        ownerId: 'migration-test-user',
        ownerName: '–¢–µ—Å—Ç –º–∏–≥—Ä–∞—Ü–∏–∏',
        guests: [
          { id: '1', name: '–ì–æ—Å—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', email: 'event-guest@test.com', status: 'confirmed' }
        ],
        wishlist: [
          { id: '1', name: '–ü–æ–¥–∞—Ä–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', description: '–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–¥–∞—Ä–æ–∫ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è', selectedBy: [] }
        ],
        location: {
          name: '–ú–µ—Å—Ç–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
          address: '–ê–¥—Ä–µ—Å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è',
          date: '2024-12-31',
          time: '20:00'
        },
        photos: [],
        createdAt: new Date().toISOString(),
        isArchived: false
      }
    };

    const saveEventResponse = await axios.post(`${API_BASE_URL}/events`, eventData);
    console.log('‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ Supabase:', saveEventResponse.data);

    // –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ Supabase
    console.log('\n5. –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –∏–∑ Supabase...');
    const getEventResponse = await axios.get(`${API_BASE_URL}/events?eventId=migration-test-event`);
    console.log('‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –ø–æ–ª—É—á–µ–Ω–æ –∏–∑ Supabase:', getEventResponse.data);

    // –¢–µ—Å—Ç 6: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
    console.log('\n6. –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase...');
    const getUserEventsResponse = await axios.get(`${API_BASE_URL}/events?userId=migration-test-user`);
    console.log('‚úÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã –∏–∑ Supabase:', getUserEventsResponse.data);

    console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –Ω–∞ Supabase –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –î–∞–Ω–Ω—ã–µ —Ç–µ–ø–µ—Ä—å —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –æ–±–ª–∞—á–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö PostgreSQL');
    console.log('üîí –î–∞–Ω–Ω—ã–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –¥–∞–∂–µ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –º–∏–≥—Ä–∞—Ü–∏–∏:', error.response?.data || error.message);
    
    if (error.message.includes('ECONNREFUSED')) {
      console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω:');
      console.log('   cd server && node index.js');
    }
    
    if (error.message.includes('SUPABASE_URL') || error.message.includes('SUPABASE_ANON_KEY')) {
      console.log('\nüí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã:');
      console.log('   1. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç –≤ Supabase');
      console.log('   2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ SQL —Å–∫—Ä–∏–ø—Ç –∏–∑ supabase-schema.sql');
      console.log('   3. –û–±–Ω–æ–≤–∏—Ç–µ env.local —Å –≤–∞—à–∏–º–∏ Supabase –¥–∞–Ω–Ω—ã–º–∏');
    }
  }
}

testMigration();
