// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–ø–ª–æ—è
const axios = require('axios');

async function checkDeployment() {
  const baseUrl = process.argv[2] || 'https://your-app.vercel.app';
  
  console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ø–ª–æ–π –ø–æ –∞–¥—Ä–µ—Å—É: ${baseUrl}`);
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    const healthResponse = await axios.get(`${baseUrl}/api/health`);
    console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthResponse.data);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    const mainResponse = await axios.get(baseUrl);
    console.log('‚úÖ –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è:', mainResponse.status === 200 ? 'OK' : 'ERROR');
    
    console.log('\nüéâ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–µ–Ω!');
    console.log(`üì± URL –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${baseUrl}`);
    console.log(`üîó API endpoint: ${baseUrl}/api/health`);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–µ–ø–ª–æ—è:', error.message);
    console.log('\n–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('1. URL –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ');
    console.log('2. –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω');
    console.log('3. –ü—Ä–æ–±–ª–µ–º—ã —Å CORS');
    console.log('4. –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Vercel');
  }
}

checkDeployment();
